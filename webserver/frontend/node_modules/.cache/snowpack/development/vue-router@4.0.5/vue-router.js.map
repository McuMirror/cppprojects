{"version":3,"file":"vue-router.js","sources":["../../../../vue-router/dist/vue-router.esm-bundler.js"],"sourcesContent":["/*!\n  * vue-router v4.0.5\n  * (c) 2021 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, defineComponent, reactive, watchEffect, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' + name : name)\r\n    : ((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' : '_vr_') + name;\r\n// rvlm = Router View Location Matched\r\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : 'rvlm');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : 'rvd');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router' : 'r');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'route location' : 'rl');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location' : 'rvl');\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nlet noop = () => { };\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    let query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || pathname.toLowerCase().indexOf(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    let aLastIndex = a.matched.length - 1;\r\n    let bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (let key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // can't go below zero\r\n        if (position === 1 || segment === '.')\r\n            continue;\r\n        if (segment === '..')\r\n            position--;\r\n        // found something that is not relative path\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        let positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    let foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash based url\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        let pathFromHash = hash.slice(1);\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    let currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    let historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/vue-router-next/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/vue-router-next/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (let callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname +\r\n * location.search` If there is a `<base>` tag in the `head`, its value will be\r\n * ignored in favor of this parameter **but note it affects all the\r\n * history.pushState() calls**, meaning that if you use a `<base>` tag, it's\r\n * `href` value **has to match this parameter** (ignoring anything after the\r\n * `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (base.indexOf('#') < 0)\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : 'nf');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    let score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern =\r\n                        // avoid an optional / if there are more segments e.g. /:p?-static\r\n                        // or /:p?-:p2\r\n                        optional && segment.length < 2\r\n                            ? `(?:/${subPattern})`\r\n                            : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // if we have more than one optional param like /:a?-static we\r\n                            // don't need to care about the optional param\r\n                            if (segment.length < 2) {\r\n                                // remove the last slash as we could be at the end\r\n                                if (path.endsWith('/'))\r\n                                    path = path.slice(0, -1);\r\n                                // do not append a slash on the next iteration\r\n                                else\r\n                                    avoidDuplicatedSlash = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        let isRootAdd = !originalRecord;\r\n        let mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                    // the aliases are always of the same kind as the original since they\r\n                    // are defined on the same record\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            let { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                let parentPath = parent.record.path;\r\n                let connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                let children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            let index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        // console.log('i is', { i })\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0)\r\n            i++;\r\n        // console.log('END i is', { i })\r\n        // while (i < matchers.length && matcher.score <= matchers[i].score) i++\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-router-next.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    let newParams = {};\r\n    for (let key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (let name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    let options = {};\r\n    for (let key in defaults) {\r\n        options[key] =\r\n            key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\r\nfunction checkSameParams(a, b) {\r\n    for (let key of a.keys) {\r\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (let key of b.keys) {\r\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (let key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        let eqPos = searchParam.indexOf('=');\r\n        let key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        let value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        if (search.length)\r\n            search += '&';\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined)\r\n                search += key;\r\n            continue;\r\n        }\r\n        // keep null values\r\n        let values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        for (let i = 0; i < values.length; i++) {\r\n            // only append & with i > 0\r\n            search += (i ? '&' : '') + key;\r\n            if (values[i] != null)\r\n                search += ('=' + values[i]);\r\n        }\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (let key in query) {\r\n        let value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n                // TODO: test me!\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-ignore: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    let promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                let options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                else {\r\n                    // display the error if any\r\n                    componentPromise = componentPromise.catch(console.error);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // __vccOpts is added by vue-class-component and contain the regular options\r\n                    let options = resolvedComponent.__vccOpts || resolvedComponent;\r\n                    const guard = options[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        let { matched } = route.value;\r\n        let { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        let currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        let index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        let parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e))\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to));\r\n        return Promise.resolve();\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    setup(props, { slots, attrs }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && true) {\r\n            const instance = getCurrentInstance();\r\n            watchEffect(() => {\r\n                if (!instance)\r\n                    return;\r\n                instance.__vrl_route = link.route;\r\n            });\r\n            watchEffect(() => {\r\n                if (!instance)\r\n                    return;\r\n                instance.__vrl_active = link.isActive;\r\n                instance.__vrl_exactActive = link.isExactActive;\r\n            });\r\n        }\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', assign({\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    onClick: link.navigate,\r\n                    href: link.href,\r\n                }, attrs, {\r\n                    class: elClass.value,\r\n                }), children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-ignore getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-ignore getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (let key in inner) {\r\n        let innerValue = inner[key];\r\n        let outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name so\r\n                // we copy any saved update or leave guards. With async setup, the\r\n                // mounting component will mount before the matchedRoute changes,\r\n                // making instance === oldInstance, so we check if guards have been\r\n                // added before. This works because we remove guards when\r\n                // unmounting/deactivating components\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    if (!to.leaveGuards.size) {\r\n                        to.leaveGuards = from.leaveGuards;\r\n                    }\r\n                    if (!to.updateGuards.size) {\r\n                        to.updateGuards = from.updateGuards;\r\n                    }\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[props.name];\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\nfunction getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nfunction getTarget() {\n    // @ts-ignore\n    return typeof navigator !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\n\nconst HOOK_SETUP = 'devtools-plugin:setup';\n\nfunction setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const hook = getDevtoolsGlobalHook();\n    if (hook) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const target = getTarget();\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor,\n            setupFn\n        });\n    }\n}\n\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // make sure we are not registering the devtool twice\r\n    if (router.__hasDevtools)\r\n        return;\r\n    router.__hasDevtools = true;\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'org.vuejs.router' + (id ? '.' + id : ''),\r\n        label: 'Vue Router',\r\n        packageName: 'vue-router',\r\n        homepage: 'https://next.router.vuejs.org/',\r\n        logo: 'https://vuejs.org/images/icons/favicon-96x96.png',\r\n        componentStateTypes: ['Routing'],\r\n        app,\r\n    }, api => {\r\n        // display state added by the router\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        // mark router-link as active\r\n        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {\r\n            if (node.name === 'RouterLink') {\r\n                if (componentInstance.__vrl_route) {\r\n                    node.tags.push({\r\n                        label: componentInstance.__vrl_route.path,\r\n                        textColor: 0,\r\n                        backgroundColor: ORANGE_400,\r\n                    });\r\n                }\r\n                if (componentInstance.__vrl_exactActive) {\r\n                    node.tags.push({\r\n                        label: 'exact',\r\n                        textColor: 0,\r\n                        backgroundColor: LIME_500,\r\n                    });\r\n                }\r\n                if (componentInstance.__vrl_active) {\r\n                    node.tags.push({\r\n                        label: 'active',\r\n                        textColor: 0,\r\n                        backgroundColor: BLUE_600,\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError(error => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'Error',\r\n                    subtitle: 'An uncaught error happened during navigation',\r\n                    logType: 'error',\r\n                    time: Date.now(),\r\n                    data: { error },\r\n                },\r\n            });\r\n        });\r\n        // attached to `meta` and used to group events\r\n        let navigationId = 0;\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            // Used to group navigations together, hide from devtools\r\n            Object.defineProperty(to.meta, '__navigationId', {\r\n                value: navigationId++,\r\n            });\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: Date.now(),\r\n                    title: 'Start of navigation',\r\n                    data,\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'End of navigation',\r\n                    time: Date.now(),\r\n                    data,\r\n                    logType: failure ? 'warning' : 'default',\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: 'redirect: ' +\r\n                (typeof record.redirect === 'string' ? record.redirect : 'Object'),\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = String(routeRecordId++);\r\n    record.__vd_id = id;\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (let key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-ignore\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    let parseQuery$1 = options.parseQuery || parseQuery;\r\n    let stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    let routerHistory = options.history;\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        let recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            let locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            let matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            let href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // pass encoded values to the matcher so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        let matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // decoding them) the matcher might have merged current location params so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        let href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/vue-router-next/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : rawLocation.query,\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.indexOf('?') > -1 ||\r\n                        newTargetLocation.indexOf('#') > -1\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : { path: newTargetLocation };\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                params: to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? error\r\n            : // reject any unknown error\r\n                triggerError(error))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-ignore\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-ignore\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords,] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && from.matched.indexOf(record) < 0) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            let toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is not guarantee for\r\n                    // it to work on every browser. So Instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    ).catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure && info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     * @param error - error to throw\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error) {\r\n        markAsReady(error);\r\n        errorHandlers.list().forEach(handler => handler(error));\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    /**\r\n     * Mark the router as ready, resolving the promised returned by isReady(). Can\r\n     * only be called once, otherwise does nothing.\r\n     * @param err - optional error\r\n     */\r\n    function markAsReady(err) {\r\n        if (ready)\r\n            return;\r\n        ready = true;\r\n        setupListeners();\r\n        readyHandlers\r\n            .list()\r\n            .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n        readyHandlers.reset();\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        let scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(triggerError);\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (let key in START_LOCATION_NORMALIZED) {\r\n                // @ts-ignore: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            let unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                if (installedApps.size < 1) {\r\n                    removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp();\r\n            };\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && true) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\r\n                updatingRecords.push(recordFrom);\r\n            else\r\n                leavingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\r\n                enteringRecords.push(recordTo);\r\n            }\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n"],"names":[],"mappings":"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"}