import { b as baseIsEqual } from '../common/_baseIsEqual-ed866530.js';
import '../common/_Uint8Array-f6bf0ba4.js';
import '../common/_MapCache-a2429e01.js';
import '../common/isObjectLike-13d75f34.js';
import './isObject.js';
import '../common/isArray-3d6a7c93.js';
import '../common/_getTag-a84770ec.js';
import '../common/_overArg-c7418829.js';

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return baseIsEqual(value, other);
}

export default isEqual;
//# sourceMappingURL=isEqual.js.map
